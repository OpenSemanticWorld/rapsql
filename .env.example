# AGEVIEWER
AGEVIEWER_PORT = 3333

# SWAGGER
SWAGGER_PORT = 8090

# POSTGREST
PGRST_PORT = 3000
PGRST_USER = authenticator
PGRST_PASSWORD = pgrestauth
PGRST_OPENAPI_SERVER_PROXY_URI = http://localhost:3000/
PGRST_DB_SCHEMAS = api
PGRST_DB_ANON_ROLE = web_anon
PGRST_DB_PRE_REQUEST = "auth.check_token" # !revocation need to be managed 
# documentation https://postgrest.org/en/stable/tutorials/tut1.html
# better use keycloak for managing users and JWT https://www.keycloak.org/
PGRST_JWT_SECRET = BKYJ7e6aTz9cDVuN0tPvL74HMQGoKZGUtr # example (!change this)
PGRST_OPENAPI_SECURITY_ACTIVE = true
# example access token for jwt secret and payload {"role": "api_user"}   
# create token https://jwt.io/

# ENHANCED POSTGRES DATABASE 
POSTGRES_PORT = 5432
POSTGRES_USER = postgres # (! docker-entrypoint/_4JAVA.sql)
POSTGRES_PASSWORD = postgres
POSTGRES_DB = rapsql
